$date
	Fri May 17 11:42:33 2013
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! buffer_size [31:0] $end
$var wire 1 " cmd_last $end
$var wire 28 # next_addr [27:0] $end
$var wire 32 $ prdata [31:0] $end
$var wire 1 % pready $end
$var wire 1 & pslverr $end
$var wire 32 ' rd_start_addr [31:0] $end
$var wire 1 ( set_int $end
$var wire 1 ) wr_ch_start $end
$var wire 32 * wr_start_addr [31:0] $end
$var reg 16 + buffer_count [15:0] $end
$var reg 1 , clk $end
$var reg 16 - int_count [15:0] $end
$var reg 16 . paddr [15:0] $end
$var reg 1 / pclken $end
$var reg 1 0 penable $end
$var reg 1 1 psel $end
$var reg 32 2 pwdata [31:0] $end
$var reg 1 3 pwrite $end
$var reg 1 4 reset $end
$scope module interface_test $end
$var wire 16 5 buffer_count [15:0] $end
$var wire 1 6 clk $end
$var wire 1 7 gpread $end
$var wire 1 8 gpwrite $end
$var wire 16 9 int_count [15:0] $end
$var wire 16 : paddr [15:0] $end
$var wire 1 ; pclken $end
$var wire 1 < penable $end
$var wire 1 = psel $end
$var wire 32 > pwdata [31:0] $end
$var wire 1 ? pwrite $end
$var wire 1 @ reset $end
$var wire 1 ) wr_ch_start $end
$var wire 1 A wr_reg0 $end
$var wire 1 B wr_reg1 $end
$var wire 1 C wr_reg2 $end
$var wire 1 D wr_reg3 $end
$var wire 1 E wr_reg4 $end
$var reg 32 F buffer_size [31:0] $end
$var reg 1 G cmd_last $end
$var reg 1 H last_tick $end
$var reg 28 I next_addr [27:0] $end
$var reg 32 J prdata [31:0] $end
$var reg 32 K prdata_pre [31:0] $end
$var reg 1 L pready $end
$var reg 1 M pslverr $end
$var reg 1 N pslverr_pre $end
$var reg 32 O rd_reg0 [31:0] $end
$var reg 32 P rd_reg1 [31:0] $end
$var reg 32 Q rd_reg2 [31:0] $end
$var reg 32 R rd_reg3 [31:0] $end
$var reg 32 S rd_reg5 [31:0] $end
$var reg 32 T rd_start_addr [31:0] $end
$var reg 1 U set_int $end
$var reg 32 V wr_start_addr [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 V
0U
b0 T
b0 S
b10 R
b0 Q
b0 P
b0 O
0N
0M
0L
b0 K
b0 J
b0 I
0H
1G
b0 F
0E
0D
0C
0B
0A
0@
0?
b0 >
0=
0<
1;
b0 :
b0 9
08
07
06
b0 5
04
03
b0 2
01
00
1/
b0 .
b0 -
0,
b0 +
b0 *
0)
0(
b0 '
0&
0%
b0 $
b0 #
1"
b0 !
$end
#5
1,
16
#10
18
b111 S
b10 R
1N
0,
06
b111 +
b111 5
b101011 2
b101011 >
b101 .
b101 :
11
1=
13
1?
#15
1M
1&
1,
16
#20
1H
1L
1%
1N
08
0,
06
10
1<
#25
0M
0&
1,
16
#30
0L
0%
0N
0,
06
00
0<
01
0=
b0 2
b0 >
#35
1,
16
#40
0,
06
#45
1,
16
#50
0,
06
